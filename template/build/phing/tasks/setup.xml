<project name="setup" default="setup">

  <target name="setup" description="Install dependencies, builds docroot, installs Drupal."
        depends="setup:build:all, setup:git-hooks, setup:behat, setup:drupal:install">
    <echo>For a full list of available Phing targets, run:</echo>
    <echo>./task.sh -l</echo>
    <echo></echo>
  </target>

  <!-- This is run when a project is cloned to a new environment. -->
  <target name="setup:build:all" description="Generates all required files for a full build. E.g., removes docroot, builds via `drush make`, restores symlinks, etc."
      depends="setup:behat, setup:build:make, setup:build:symlinks, frontend:build">
  </target>

  <!-- Delete the docroot directory. Used prior to running Drush make. -->
  <target name="setup:build:rm-docroot" description="Removes the docroot folder.">
    <if>
      <available property="sites.exists" file="${docroot}/sites/default" type="dir"/>
      <then>
        <chmod file="${docroot}/sites/default" mode="0775"/>
      </then>
    </if>
    <delete dir="${docroot}" failonerror="false" quiet="true" />
  </target>

  <!-- Drush make the build using a recursive strategy. -->
  <target name="setup:build:make" description="Downloads core and contrib based on project's make.yml." depends="setup:build:rm-docroot">

    <drush command="make" assume="yes">
      <param>"${repo.root}/${project.make_file}"</param>
      <param>"${docroot}"</param>
      <option name="concurrency">8</option>
      <option name="no-gitinfofile"></option>
    </drush>

  </target>

  <!-- Check for docroot. -->
  <target name="setup:check:docroot" description="Checks to see if docroot exists. Fails if it does not.">
    <if>
      <not>
        <available property="sites.exists" file="${docroot}/sites/default" type="dir"/>
      </not>
      <then>
        <fail message="The docroot is missing. Please run setup:build:all." />
      </then>
    </if>
  </target>

  <target name="setup:drupal:settings" description="Create a local.settings.php with local db creds from local.settings.php.">
    <copy file="${repo.root}/sites/default/settings/default.local.settings.php" tofile="${repo.root}/sites/default/settings/local.settings.php"/>
  </target>

  <target name="setup:build:symlinks" description="Symlinks required files from /sites to /docroot/sites.">
    <!-- Symlink modules and themes. -->
    <delete dir="${docroot}/modules/custom" quiet="true"/>
    <delete dir="${docroot}/themes/custom" quiet="true"/>
    <delete dir="${docroot}/profiles/custom" quiet="true"/>
    <exec dir="${repo.root}" command="ln -s ../../modules/custom docroot/modules/custom"/>
    <exec dir="${repo.root}" command="ln -s ../../themes/custom docroot/themes/custom"/>
    <exec dir="${repo.root}" command="ln -s ../../profiles/custom docroot/profiles/custom"/>

    <!-- Symlink settings. -->
    <exec dir="${repo.root}" command="ln -s ../../../drush docroot/sites/default/drush"/>
    <exec dir="${repo.root}" command="ln -s ../../../sites/default/drushrc.php docroot/sites/default/drushrc.php"/>
    <exec dir="${repo.root}" command="ln -s ../../../sites/default/settings docroot/sites/default/settings"/>
    <exec dir="${repo.root}" command="ln -s ../../../sites/default/settings.php docroot/sites/default/settings.php"/>
    <exec dir="${repo.root}" command="ln -s ../../../sites/default/files docroot/sites/default/files"/>
  </target>

  <target name="setup:drupal:install"
          description="Installs Drupal using credentials from local.settings.php."
          depends="setup:drupal:settings, setup:check:docroot">

    <copy file="${repo.root}/sites/default/settings.php" tofile="${repo.root}/sites/default/settings.php.bak"/>

    <drush command="site-install" assume="yes" verbose="TRUE">
      <option name="site-name">"${project.human_name}"</option>
      <option name="site-mail">"${drupal.account.mail}"</option>
      <option name="account-name">"${drupal.account.name}"</option>
      <option name="account-pass">"${drupal.account.password}"</option>
      <option name="account-mail">"${drupal.account.mail}"</option>
      <param>"${project.profile.name}"</param>
      <param>"install_configure_form.update_status_module='array(FALSE,FALSE)'"</param>
    </drush>

    <if>
      <available property="config.exists" file="${repo.root}/config/default/system.site.yml"/>
      <then>
        <drush command="config-import" assume="yes" verbose="TRUE">
          <param>sync</param>
        </drush>
      </then>
    </if>

    <drush command="cache-rebuild" verbose="TRUE"/>

    <!-- Restore original settings.php, wiped out by Drupal installation. -->
    <copy file="${repo.root}/sites/default/settings.php.bak" tofile="${repo.root}/sites/default/settings.php"/>
  </target>

  <target name="setup:db:sync" description="Overwrites local database with upstream database from Acquia Cloud.">
    <property name="db.source" value="@test" />
    <drush command="sql-drop" assume="yes"></drush>
    <drush command="sql-sync" assume="yes">
      <param>"${db.source}"</param>
      <param>"@self"</param>
      <!-- This key is defined in /drush/drushrc.php. -->
      <option name="structure-tables-key">"lightweight"</option>
    </drush>
  </target>

  <target name="setup:git-hooks" description="Installs git hooks to local .git/hooks directory from version controlled scripts/git-hooks directory.">
    <!-- Symlink into .git directory. -->
    <delete dir="${repo.root}/.git/hooks" quiet="true" failonerror="false"/>
    <exec dir="${repo.root}/.git" command="ln -snv ../scripts/git-hooks hooks" logoutput="true"/>

    <!-- Grant execution permissions. -->
    <chmod mode="0755">
      <fileset dir="${repo.root}/scripts/git-hooks">
        <exclude name="**/*.sample" />
        <exclude name="**/README.md" />
      </fileset>
    </chmod>
  </target>

  <target name="setup:behat" description="Generates tests/behat/local.yml file for executing Behat tests locally.">
    <copy file="${repo.root}/tests/behat/example.local.yml" tofile="${repo.root}/tests/behat/local.yml">
      <filterchain>
        <expandproperties />
      </filterchain>
    </copy>
  </target>

</project>
