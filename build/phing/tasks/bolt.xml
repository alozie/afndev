<!-- THESE TARGETS ARE FOR USE IN BOLT ONLY, NOT FOR CHILD PROJECTS
     CREATED VIA PROJECT TEMPLATE. -->
<project name="bolt" default="build">

  <!-- Runs all bolt related targets. -->
  <target name="bolt:new-project" description="Runs all targets required to spin up new project from Bolt." depends="bolt:configure, bolt:create"></target>

  <!-- Creates new configuration files from example.*.yml files.
       Note: this target must be called by itself first. Other targets must be
       executed separately so that they may load the correct configuration   -->
  <target name="bolt:configure" description="Generates default .yml configuration files based on provided example files.">
    <copy todir="${repo.root}">
      <fileset dir="${repo.root}/install">
        <include name="example.project.yml" />
        <include name="example.make.yml" />
        <include name="example.local.yml" />
      </fileset>
      <filterchain>
        <expandproperties />
      </filterchain>
    </copy>

    <!-- Rename files by removing "example" prefix. -->
    <move file="${repo.root}/example.make.yml" tofile="${repo.root}/make.yml" />
    <move file="${repo.root}/example.project.yml" tofile="${repo.root}/project.yml" />
    <move file="${repo.root}/example.local.yml" tofile="${repo.root}/local.yml" />
  </target>

  <!-- Create a new project directory based on current repository. -->
  <target name="bolt:create" description="Create a new project based on local repository." depends="setup:build:rm-docroot">
    <!-- Remove from existing directory. -->
    <delete dir="${bolt.new.dir}" />

    <!-- (re)Create project directory. -->
    <mkdir dir="${bolt.new.dir}" />
    <copy todir="${bolt.new.dir}" >
      <fileset dir="${repo.root}" casesensitive="false" defaultexcludes="false" excludes=".cvsignore SCCS SCCS/** vssver.scc .svn .svn/** ._* .DS_Store .darcs .darcs/** .git .git/** .gitattributes .gitmodules .idea .idea/** .editorconfig">
        <!-- Exclude files that should not be copied. -->
        <exclude name="install/**" />
        <exclude name="build/phing/tasks/bolt.xml" />
        <exclude name="readme.md" />
        <exclude name=".travis.yml" />
        <exclude name="tests/phpunit/Bolt.php" />
        <exclude name="vendor/**" />
      </fileset>
    </copy>
    <copy file="${repo.root}/install/example.travis.yml" tofile="${bolt.new.dir}/.travis.yml"/>

    <!-- Remove all lines that reference Bolt from specified dirs/files. -->
    <reflexive>
      <fileset dir="${bolt.new.dir}">
        <include name="build/phing/build.xml" />
      </fileset>
      <filterchain>
        <replaceregexp>
          <regexp pattern="(.*)bolt(.*)" replace="" ignoreCase="true" />
        </replaceregexp>
      </filterchain>
    </reflexive>

    <!-- Reflexively expand properties in specified dirs/files. -->
    <reflexive>
      <fileset dir="${bolt.new.dir}">
        <include name="readme/**/*" />
        <include name="sites/default/settings.php" />
        <include name="sites/all/settings/**/*" />
      </fileset>
      <filterchain>
        <expandproperties />
      </filterchain>
    </reflexive>

    <exec dir="${bolt.new.dir}" command="ln -s readme/readme.md readme.md" />

    <gitinit repository="${bolt.new.dir}" />
    <exec command="git add -A" dir="${bolt.new.dir}" logoutput="true" passthru="true" />
    <gitcommit repository="${bolt.new.dir}" message="Initial commit of default files from Bolt." allFiles="true" />

    <exec dir="${bolt.new.dir}" command="composer install" logoutput="true" passthru="true" />

    <echo></echo>
    <echo>New project was created in ${bolt.new.dir}</echo>
    <echo>Please change to the new project directory and run setup tasks. E.g.,</echo>
    <echo></echo>
    <echo>cd ${bolt.new.dir}</echo>
    <echo>./task.sh setup:build:all</echo>
    <echo>./task.sh setup:git-hooks</echo>
  </target>

  <!-- This target is meant to test Bolt itself on TravisCI.
       A few things to note:
       - We do not run validate:* targets, since they can be run in parallel.
  -->
  <target name="bolt:self-test" description="Runs tests against acquia-pso/bolt proper.">
      <phingcall target="bolt:configure" />
      <phingcall target="bolt:create" />
      <phingcall target="setup:build:all" />
      <phingcall target="setup:drupal:install" />
      <phingcall target="setup:git-hooks" />
      <phingcall target="setup:behat" />
      <phingcall target="tests:security-updates" />
      <phingcall target="tests:behat" />
      <phingcall target="tests:phpunit" />

  </target>
</project>
